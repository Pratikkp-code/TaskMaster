
services:
  client:
    build: { context: ./client, dockerfile: Dockerfile }
    container_name: client
    ports: [ "3000:3000" ]
    volumes: [ ./client:/app, /app/node_modules, /app/.next ]
    networks: [ app-network ]

  auth-service:
    build: { context: ./services/auth-service, dockerfile: Dockerfile }
    container_name: auth-service
    ports: [ "4001:4001" ]
    volumes: [ ./services/auth-service/src:/app/src ]
    environment:
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
      - PORT=4001
    networks: [ app-network ]

  task-service:
    build: { context: ./services/task-service, dockerfile: Dockerfile }
    container_name: task-service
    ports: [ "4002:4002" ]
    volumes:
      - ./services/task-service/src:/app/src
      - ./secrets/gcp-credentials.json:/app/gcp-credentials.json:ro
    environment:
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=${REDIS_URL} # Using single URL for consistency
      - PORT=4002
      - GCS_PROJECT_ID=${GCS_PROJECT_ID}
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcp-credentials.json
    networks: [ app-network ]
    depends_on: [ redis ]

  geo-service:
    build: { context: ./services/geo-service, dockerfile: Dockerfile }
    container_name: geo-service
    ports: [ "4004:4004" ]
    volumes: [ ./services/geo-service/src:/app/src ]
    environment:
      - PORT=4004
      - GOOGLE_GEOCODING_API_KEY=${GOOGLE_GEOCODING_API_KEY} # FIX: Use .env variable
    networks: [ app-network ]

  realtime-service:
    build: { context: ./services/realtime-service, dockerfile: Dockerfile }
    container_name: realtime-service
    ports: [ "4003:4003" ]
    volumes: [ ./services/realtime-service/src:/app/src ]
    environment:
      - REDIS_URL=${REDIS_URL} # Using single URL for consistency
      - PORT=4003
    networks: [ app-network ]
    depends_on: [ redis ]

  redis:
    image: redis:latest
    container_name: redis
    ports: [ "6379:6379" ]
    networks: [ app-network ]

networks:
  app-network:
    driver: bridge
