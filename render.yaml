services:
  # --- Service 1: The Redis Database ---
  # Render provides this as a managed service.
  - type: redis
    name: redis # This name must match what your other services expect
    plan: free
    ipAllowList: [] # Allow all your other services to connect

  # --- Service 2: The Geo Service (Backend) ---
  - type: web
    name: geo-service
    env: docker
    dockerContext: ./services/geo-service
    dockerfilePath: ./services/geo-service/Dockerfile
    plan: free # Use the free instance type
    # Health check to ensure the service is running before accepting traffic
    healthCheckPath: /
    envVars:
      - key: PORT
        value: 10000 # Render will automatically use this port
      - key: GOOGLE_GEOCODING_API_KEY
        fromSecret: GOOGLE_GEOCODING_API_KEY # We will add this secret in the Render dashboard

  # --- Service 3: The Real-time Service (Backend) ---
  - type: web
    name: realtime-service
    env: docker
    dockerContext: ./services/realtime-service
    dockerfilePath: ./services/realtime-service/Dockerfile
    plan: free
    healthCheckPath: /
    envVars:
      - key: PORT
        value: 10000
      - key: REDIS_HOST
        fromService:
          type: redis
          name: redis
          property: host
      - key: REDIS_PORT
        fromService:
          type: redis
          name: redis
          property: port

  # --- Service 4: The Auth Service (Backend) ---
  - type: web
    name: auth-service
    env: docker
    dockerContext: ./services/auth-service
    dockerfilePath: ./services/auth-service/Dockerfile
    plan: free
    healthCheckPath: /
    envVars:
      - key: PORT
        value: 10000
      - key: MONGO_URI
        fromSecret: MONGO_URI
      - key: JWT_SECRET
        fromSecret: JWT_SECRET

  # --- Service 5: The Task Service (Backend) ---
  - type: web
    name: task-service
    env: docker
    dockerContext: ./services/task-service
    dockerfilePath: ./services/task-service/Dockerfile
    plan: free
    healthCheckPath: /
    envVars:
      - key: PORT
        value: 10000
      - key: MONGO_URI
        fromSecret: MONGO_URI
      - key: JWT_SECRET
        fromSecret: JWT_SECRET
      - key: GCS_PROJECT_ID
        fromSecret: GCS_PROJECT_ID
      - key: GCS_BUCKET_NAME
        fromSecret: GCS_BUCKET_NAME
      - key: GOOGLE_APPLICATION_CREDENTIALS
        fromSecret: GCP_CREDENTIALS_JSON # Path to the secret file
      - key: REDIS_HOST
        fromService:
          type: redis
          name: redis
          property: host
      - key: REDIS_PORT
        fromService:
          type: redis
          name: redis
          property: port

  # --- Service 6: The Next.js Client (Frontend) ---
  - type: web
    name: client
    env: docker
    dockerContext: ./client
    dockerfilePath: ./client/Dockerfile
    plan: free
    # Health check for the Next.js app
    healthCheckPath: /
    # Define the environment variables the Next.js app needs at BUILD time
    dockerBuildCommand: >
      docker build
      --build-arg NEXT_PUBLIC_AUTH_API_URL=${AUTH_SERVICE_URL}
      --build-arg NEXT_PUBLIC_TASK_API_URL=${TASK_SERVICE_URL}
      --build-arg NEXT_PUBLIC_REALTIME_API_URL=${REALTIME_SERVICE_URL}
      --build-arg NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      -t $IMAGE_URL .